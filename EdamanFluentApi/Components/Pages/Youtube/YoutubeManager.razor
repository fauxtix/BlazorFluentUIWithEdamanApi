@page "/youtubemanager"
@using EdamanFluentApi.Models.Youtube.Dtos

@rendermode InteractiveServer


@if (items is null)
{
    <Spinner IsVisible="@spinnerVisible" />
}
else
{
    <div class="col-lg-12 text-right">
        <div class="my-3">
            <FluentButton Class="e-btn e-primary" style="border-radius:11px;margin-left:50px;"
                          IconStart="@(new Icons.Regular.Size32.Add())"
                          Appearance="Appearance.Accent"
                          @onclick="NotifyAddingYoutubeRecord">
                New<i class="fa fa-youtube" />
            </FluentButton>
        </div>
        <div class="my-3">
        <FluentDivider Orientation="Orientation.Horizontal" />
        </div>
        <div class="my-3">
            <FluentDataGrid Items="@items" Style="width: 100%;"
                            GenerateHeader="GenerateHeaderOption.Sticky"
                            GridTemplateColumns="0.2fr 1.2fr 0.8fr 0.2fr 1fr 0.6fr"
                            Pagination="@pagination" TGridItem="MediaVM">
                <TemplateColumn Tooltip="true" Title="Image">
                    <img class="cover" src="@(context.CoverFile)" alt="Image of @(context.CoverFile)" width="80" height="60" />
                </TemplateColumn>

                <PropertyColumn Property="@(c => c.FileName)"
                                Sortable="true" Filtered="!string.IsNullOrWhiteSpace(nameFilter)" Title="Title" Tooltip="true"
                                Style="font-weight:bold;">
                    <ColumnOptions>
                        <div class="search-box">
                            <FluentSearch Autofocus=true @bind-Value=nameFilter @oninput="HandleCountryFilter" @bind-Value:after="HandleClear" Placeholder="Search...." />
                        </div>
                    </ColumnOptions>
                </PropertyColumn>
                <PropertyColumn Property="@(c => c.Autor)" Sortable="true" Title="Channel" />
                <PropertyColumn Property="@(c => c.AnoEdicao)" Sortable="true" Title="Edition" />
                <PropertyColumn Property="@(c => c.Genero)" Sortable="true" Title="Category" />
                <TemplateColumn Title="Actions" Align=Align.Center>
                    <FluentStack>
                        <FluentButton IconStart="@(new Icons.Regular.Size24.Edit())" Appearance="Appearance.Outline" OnClick="@( async () => await EditMediaRecord(context))" />
                        <FluentButton IconStart="@(new Icons.Regular.Size24.Delete())" Appearance="Appearance.Outline" OnClick="@( async () => await DeleteMedia(context.Id, context.FileName))" />
                        <FluentButton IconStart="@(new Icons.Regular.Size24.Play())" Appearance="Appearance.Outline" OnClick="@( async () => await PlayMedia(context))" />
                    </FluentStack>
                </TemplateColumn>
            </FluentDataGrid>
        </div>
    </div>
    <FluentPaginator State="@pagination" />
}


<FluentSwitch @bind-Value="@_clearItems"
              @bind-Value:after="ToggleItemsAsync"
              UncheckedMessage="Clear all results"
              CheckedMessage="Restore all results">
</FluentSwitch>



<style>
    .fluent-data-grid-row:has([row-selected]) {
        background-color: var(--neutral-fill-stealth-hover)
    }

    .fluent-dialog-body {
        display: flex;
        justify-content: center;
        align-items: center;
        width: 100%;
        height: 100%;
        background-color: white;
        border: solid;
    }

    .cover {
        height: 4rem;
        margin: auto;
        border: 1px solid var(--neutral-layer-3);
    }

    .fluent-container {
        display: flex;
        justify-content: center;
        align-items: center;
        width: 100%;
        height: 100%;
        margin: 0;
        padding: 0;
    }
</style>