@page "/edityoutube"

@using EdamanFluentApi.Models.Youtube.Dtos
@using EdamanFluentApi.Services.Interfaces.Youtube
@using static EdamanFluentApi.Data.Enums.AppDefinitions
@implements Microsoft.FluentUI.AspNetCore.Components.IDialogContentComponent

@if (categoryList == null || formatList == null)
{
    <Spinner IsVisible=@isLoadingData />
}
else
{
    @if (Content is not null)
    {
        <div class="d-flex gap-2">
            <div class="row mb-2">
                <div class="col-md-12">
                    @* Header *@
                    <FluentDialogHeader ShowDismiss="true">
                        <FluentStack VerticalAlignment="VerticalAlignment.Center">
                            <FluentIcon Value="@(new Icons.Regular.Size24.TagSearch())" />
                            <FluentLabel Typo="Typography.PaneHeader">
                                @(Content.SelectedRecord.Id > 0 ? Content.SelectedRecord.FileName : "New Youtube API search")
                            </FluentLabel>
                        </FluentStack>
                    </FluentDialogHeader>

                    @* Body *@
                    <FluentDialogBody>
                        <EditForm Model="@Content" OnValidSubmit="ValidHandlerAsync">
                            <div class="d-flex justify-content-center align-items-center mx-2 gap-2"
                                 hidden="@(Content.EditMode)">
                                <FluentTextField Label="Youtube Url: " Style="width:400px;"
                                                 Placeholder="Url"
                                                 Appearance="FluentInputAppearance.Outline"
                                                 Autofocus="true" Disabled="@(Content.SelectedRecord.Id > 0)"
                                                 Required
                                                 @bind-Value="@Content.SelectedRecord.FileUrl" />
                                <FluentButton Appearance="Appearance.Accent"
                                              Disabled="@(Content.SelectedRecord.Id > 0)"
                                              OnClick="@GetMetadata">
                                    Get metadata
                                </FluentButton>
                            </div>
                            <div hidden="@(hideLowerDiv)" class="e-youtube-form">
                                <div class="row m-2">
                                    <div class="d-flex img-fluid justify-content-center">
                                        @if (!string.IsNullOrEmpty(Content.SelectedRecord.CoverFile))
                                        {
                                            <img class="w-75" alt=""
                                                 src="@Content.SelectedRecord.CoverFile" width="250" height="250" />
                                        }
                                        else
                                        {
                                            <img class="img-fluid img-thumbnail" alt=""
                                                 src="/images/No_Image_Available.jpg" />
                                        }
                                    </div>
                                    <div class="mt-3">
                                        <FluentDatePicker Placeholder="Published date"
                                                          Class="form-control"
                                                          @bind-Value=transDate
                                                          Label="Published date">
                                        </FluentDatePicker>
                                    </div>
                                    <div class="mt-2">
                                        <FluentTextField Placeholder="Title"
                                                         Class="form-control e-round" Label="Title"
                                                         @bind-Value="@Content.SelectedRecord.FileName">
                                        </FluentTextField>
                                    </div>
                                    <div class="mt-2">
                                        <FluentSelect TOption="CategoryVM" Items="categoryList"
                                                      @bind-Value=categoryAsString
                                                      OptionText="@(i => i.Descricao)"
                                                      OptionValue="@(i => i.Id.ToString())"
                                                      Label="Category"
                                                      Width="280px"
                                                      Height="200px">
                                        </FluentSelect>
                                    </div>
                                   @*  <div class="mt-2">
                                        <FluentSelect TOption="FormatoMediaVM" Items="formatList"
                                                      @bind-Value=mediaFormatAsString
                                                      OptionText="@(i => i.Descricao)"
                                                      Label="Media Format"
                                                      OptionValue="@(i => i.Id.ToString())"
                                                      Width="280px"
                                                      Height="200px">
                                        </FluentSelect>
                                    </div> *@
                                    <div class="mt-2">
                                        <FluentTextField Placeholder="Published by"
                                                         Class="form-control e-round" Label="Published by"
                                                         @bind-Value="@Content.SelectedRecord.Autor">
                                        </FluentTextField>
                                    </div>
                                    @if (Content.EditMode && !Content.SelectedRecord.Tempo.Contains("0.00"))
                                    {
                                        <div class="d-flex justify-content-center align-items-center gap-2 mt-2">
                                            <FluentTextField Placeholder="Time"
                                                             Class="form-control e-round" Label="Time"
                                                             Disabled="true" Size="80"
                                                             @bind-Value="@Content.SelectedRecord.Tempo">
                                            </FluentTextField>
                                            <FluentTextField hidden="true" Size="100"></FluentTextField>
                                            <FluentTextField Placeholder="Size"
                                                             Class="form-control e-round text-center" Label="Size" 
                                                             Disabled="true"
                                                             @bind-Value="@Content.SelectedRecord.Tamanho">
                                            </FluentTextField>
                                        </div>
                                    }

                                </div>
                            </div>

                        </EditForm>
                    </FluentDialogBody>

                    @* Footer *@
                    <FluentDialogFooter>
                        <FluentButton Appearance="Appearance.Accent"
                                      OnClick="@AddOrSaveRecord" Disabled="@DisableSaveButton">
                            Save
                        </FluentButton>
                        <FluentButton Appearance="Appearance.Accent"
                                      OnClick="@CancelAsync">
                            Cancel
                        </FluentButton>

                    </FluentDialogFooter>
                </div>
            </div>
        </div>
    }
    <FluentMessageBar Title="Youtube API search"
                      Style="width: 500px; border: 1px solid var(--accent-fill-rest)"
                      AllowDismiss="true"
                      Intent="MessageIntent.Warning" Visible="@showAlertMessage"
                      Type="@MessageType.MessageBar"
                      Icon="@(new Icons.Regular.Size24.Warning())">
        @alertMessage
    </FluentMessageBar>
}
